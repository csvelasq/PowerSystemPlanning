<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:t="clr-namespace:Simple.Wpf.Terminal;assembly=Simple.Wpf.Terminal"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PowerSystemPlanningWpfApp"
        xmlns:localUtils="clr-namespace:PowerSystemPlanningWpfApp.ControlUtils"
        xmlns:pwsEditor="clr-namespace:PowerSystemPlanningWpfApp.Model.PowerSystemEditor"
        xmlns:scenEditor="clr-namespace:PowerSystemPlanningWpfApp.Model.PowerSystemStateEditor"
        xmlns:appWide="clr-namespace:PowerSystemPlanningWpfApp.ApplicationWide"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        xmlns:scenarioTep="clr-namespace:PowerSystemPlanningWpfApp.Model.ScenarioTep"
        x:Class="PowerSystemPlanningWpfApp.MainWindow"
        mc:Ignorable="d"
        Title="Power System Planning" 
        Height="500" Width="700" WindowState="Maximized"
        Loaded="Window_Loaded"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}">
    <Window.CommandBindings>
        <!--<CommandBinding Command="New" Executed="y"  CanExecute="x" />-->
        <CommandBinding Command="Open" Executed="OnOpenExecuted" />
        <CommandBinding Command="Save" Executed="OnSaveExecuted" />
    </Window.CommandBindings>
    <DockPanel LastChildFill="True">
        <StackPanel DockPanel.Dock="Top"  
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center">
            <Menu Margin="0,5,0,5">
                <MenuItem Header="_File">
                    <MenuItem Header="_New" Command="ApplicationCommands.New" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/NewFile_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Open" Command="ApplicationCommands.Open" >
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Open_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Save" Command="ApplicationCommands.Save">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/Save_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Save As" Command="ApplicationCommands.SaveAs" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/SaveAs_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <localUtils:RecentFileList x:Name="RecentFileList" />
                    <MenuItem Header="_Exit" Command="{Binding ExitCommand}">
                        <MenuItem.Icon>
                            <Image Source="pack://application:,,,/Resources/CloseSolution_16x.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Analysis">
                    <MenuItem Header="_OPF under Scenarios" Command="{Binding NewScenarioOpfCommand}" />
                    <MenuItem Header="_TEP under Scenarios">
                        <MenuItem Header="_New" Command="{Binding NewScenarioTepCommand}" />
                        <MenuItem Header="_Open Existing" Command="{Binding OpenScenarioTepCommand}" />
                    </MenuItem>
                </MenuItem>
            </Menu>
        </StackPanel>
        <!--Contents-->
        <avalonDock:DockingManager DocumentsSource="{Binding MyOpenDocuments}"
                                   ActiveContent="{Binding ActiveDocumentViewModel, Mode=TwoWay}"
                                   Grid.Column="2" Loaded="DockingManager_Loaded" x:Name="dockingManager">
            <avalonDock:DockingManager.Resources>
                <!--add views for specific ViewModels -->
                <!--View for Power System editor-->
                <DataTemplate DataType="{x:Type appWide:PowerSysViewModel}">
                    <pwsEditor:PowerSystemEditorControl />
                </DataTemplate>
                <!--View for scenario editor-->
                <DataTemplate DataType="{x:Type appWide:ScenarioEditorViewModel}">
                    <scenEditor:PowerSystemStateCollectionDgEditorControl />
                </DataTemplate>
                <!--View for scenario tep setup-->
                <DataTemplate DataType="{x:Type appWide:ScenarioTepSetupViewModel}">
                    <scenarioTep:ScenarioTepSetupControl />
                </DataTemplate>
            </avalonDock:DockingManager.Resources>
            <avalonDock:DockingManager.LayoutItemContainerStyle>
                <!--you can add additional bindings from the layoutitem to the DockWindowViewModel-->
                <Style TargetType="{x:Type dockctrl:LayoutItem}" >
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                </Style>
            </avalonDock:DockingManager.LayoutItemContainerStyle>
            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Vertical">
                    <avalonDock:LayoutPanel Orientation="Horizontal">
                        <!--Opened documents: power systems and studies-->
                        <avalonDock:LayoutDocumentPaneGroup>
                            <avalonDock:LayoutDocumentPane/>
                        </avalonDock:LayoutDocumentPaneGroup>
                    </avalonDock:LayoutPanel>
                </avalonDock:LayoutPanel>
                <avalonDock:LayoutRoot.BottomSide>
                    <!--Log and Python Shell-->
                    <avalonDock:LayoutAnchorSide>
                        <avalonDock:LayoutAnchorGroup>
                            <avalonDock:LayoutAnchorable Title="Log" x:Name="bottomAnchor">
                                <ScrollViewer>
                                    <RichTextBox x:Name="LogRichTextBox" />
                                </ScrollViewer>
                            </avalonDock:LayoutAnchorable>
                            <avalonDock:LayoutAnchorable Title="Python Shell">
                                <TextBox/>
                            </avalonDock:LayoutAnchorable>
                        </avalonDock:LayoutAnchorGroup>
                    </avalonDock:LayoutAnchorSide>
                </avalonDock:LayoutRoot.BottomSide>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>
    </DockPanel>
</Window>
